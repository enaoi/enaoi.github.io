(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{379:function(e,t,v){"use strict";v.r(t);var _=v(25),s=Object(_.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"xmlhttprequest"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest"}},[e._v("#")]),e._v(" XMLHttpRequest")]),e._v(" "),v("h2",{attrs:{id:"属性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[e._v("#")]),e._v(" 属性")]),e._v(" "),v("ol",[v("li",[v("p",[v("strong",[e._v("readyState")]),e._v("\n| value |常量名  |说明  |\n| --- | --- | --- |\n| 0 | xhr.UNSENT | XMLHttpRequest 对象已创建或已被 abort() 方法重置 |\n| 1 | xhr.OPENED | open() 方法已调用，可以使用实例的"),v("code",[e._v("setRequestHeader()")]),e._v("方法设置请求头信息 |\n| 2 | xhr.HEADERS_RECEIVED |Send() 方法已调用,响应头部都已经接收到  |\n| 3 | xhr.LOADING | 响应体开始接收但未完成 |\n| 4 | xhr.DONE | HTTP 响应已完全接收 |")])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("responseType")]),e._v("： 手动设置。确保浏览器和设置的值保持一致。不兼容的时候，服务器返回的数据变为null。")]),e._v(" "),v("ul",[v("li",[e._v('"" = "text"')]),e._v(" "),v("li",[e._v('"json"')]),e._v(" "),v("li",[e._v('"blob"')]),e._v(" "),v("li",[e._v('"document"')]),e._v(" "),v("li",[e._v('"arraybuffer"')])])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("response")]),e._v("：做为响应主体被返回，手动设置的responseType会自动转换response的格式。")])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("responseText")]),e._v("：纯文本内容。手动设置的type和它不一致时会报错")])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("status")]),e._v("：服务器返回的HTTP状态码。readyState<3 时,读取该属性会导致异常")])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("statusText")]),e._v('：status=200 时是 "OK"，status=404 时是 "Not Found"。readyState<3 时,读取该属性会导致异常')])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("responseURL")]),e._v("： url")])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("responseXML")]),e._v("：返回从服务器接收到的 HTML 或 XML 文档对象。 有效的前提：")]),e._v(" "),v("ol",[v("li",[e._v("发送请求前，"),v("code",[e._v("xhr.responseType = 'document'")])]),e._v(" "),v("li",[e._v("如果回应的"),v("code",[e._v("Content-Type")]),e._v(" 不等于 "),v("code",[e._v("text/xml")]),e._v(" 或"),v("code",[e._v("application/xml")]),e._v("。必须用 "),v("code",[e._v("xhr.overrideMimeType('text/xml')")]),e._v("强制进行 XML 解析")])])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("withCredentials")]),e._v("： 是否允许跨域携带cookie")]),e._v(" "),v("ul",[v("li",[e._v("服务端必须显示返回 "),v("code",[e._v("Access-Control-Allow-Credentials: true")]),e._v(" 才能让属性生效")])])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("timeout")]),e._v(":  0 表示没有时间限制。时间单位为ms，表示多少毫秒后，请求为超时，自动终止。")])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("upload")]),e._v(": 文件上传")])])]),e._v(" "),v("h2",{attrs:{id:"事件句柄"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#事件句柄"}},[e._v("#")]),e._v(" 事件句柄")]),e._v(" "),v("ol",[v("li",[v("p",[v("strong",[e._v("onreadystatechange")]),e._v("：每次 readyState 属性改变的时候调用的事件句柄函数。当 readyState 为 3 时，它也可能调用多次。")])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("onload")]),e._v(": 请求成功完成")])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("onerror")]),e._v("：请求失败完成")])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("onloadend")]),e._v("：请求完成：不管成功还是失败")])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("ontimeout")])])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("onabort")])])]),e._v(" "),v("li",[v("p",[e._v("onloadstart: HTTP 请求发出")])]),e._v(" "),v("li",[v("p",[e._v("onprogress: 正在发送和加载数据")])])]),e._v(" "),v("h2",{attrs:{id:"实例方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#实例方法"}},[e._v("#")]),e._v(" 实例方法")]),e._v(" "),v("ol",[v("li",[v("p",[v("strong",[e._v("open(method, url, async, username, password)")]),e._v("：初始化 HTTP 请求参数。async 默认为true")]),e._v(" "),v("ol",[v("li",[v("code",[e._v("async:false")]),e._v("：请求是同步的，后续对 send() 的调用将阻塞，直到响应完全接收。")]),e._v(" "),v("li",[v("code",[e._v("async:true")]),e._v("：请求是异步的，且通常需要一个 onreadystatechange 事件句柄。")])])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("setRequestHeader(name, value)")]),e._v("： 必须在调用 "),v("code",[e._v("open()")]),e._v(" 后，"),v("code",[e._v("send()")]),e._v(" 之前，设置或添加一个 HTTP 请求头部。例如 "),v("code",[e._v("xhr.setRequestHeader('Accept','application/json, text/plain, */*')")])])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("getResponseHeader(name)")]),e._v("：name不区分大小写")])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("getAllResponseHeaders()")]),e._v("：axios中就是调用该方法，将 headers 做为 response 对象的参数返回。字符串类型，使用CRLF分隔（回车+换行）")])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("send(body)")])]),e._v(" "),v("ol",[v("li",[e._v("请求发布，readyState 由 1 置为 2，并触发 onreadystatechange 事件句柄。")]),e._v(" "),v("li",[e._v("同步请求：这个方法会阻塞并不会返回，直到 readyState 为 4 并且服务器的响应被完全接收；异步请求：send() 立即返回，服务器响应将在一个后台线程中处理。")]),e._v(" "),v("li",[e._v("如果服务器响应带有一个 HTTP 重定向，send() 方法或后台线程自动遵从重定向。")]),e._v(" "),v("li",[e._v("当所有的 HTTP 响应头部已经接收，send() 或后台线程把 readyState 置为 3， 并触发 onreadystatechange 事件句柄。")]),e._v(" "),v("li",[e._v("如果响应较长，send() 或后台线程可能在状态 3 中触发 onreadystatechange 事件句柄：这可以作为一个下载进度指示器。")]),e._v(" "),v("li",[e._v("当响应完成，send() 或后台线程把 readyState 设置为 4，并最后一次触发事件句柄。")])])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("abort()")]),e._v("：取消当前响应，把 XMLHttpRequest 对象重置为 readyState 为 0 的状态,关闭连接并且结束任何未决的网络活动。")])]),e._v(" "),v("li",[v("p",[v("strong",[e._v("overrideMimeType()")]),e._v("：必须在send之前设置。如果希望服务器返回指定的数据类型，可以用"),v("code",[e._v("responseType")]),e._v("属性告诉服务器，就像下面的例子。只有在服务器无法返回某种数据类型时，才使用"),v("code",[e._v("overrideMimeType()")]),e._v("方法。")])])]),e._v(" "),v("p",[e._v("code 后期贴在git上")])])}),[],!1,null,null,null);t.default=s.exports}}]);