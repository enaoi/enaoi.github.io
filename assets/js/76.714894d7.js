(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{434:function(t,a,s){"use strict";s.r(a);var n=s(25),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"vue-组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-组件"}},[t._v("#")]),t._v(" vue 组件")]),t._v(" "),s("p",[t._v("插槽")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/vue_scope.png",alt:"vue scope"}})]),t._v(" "),s("h2",{attrs:{id:"基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[t._v("#")]),t._v(" 基础")]),t._v(" "),s("h3",{attrs:{id:"data函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#data函数"}},[t._v("#")]),t._v(" data函数")]),t._v(" "),s("blockquote",[s("p",[t._v("data必须是一个函数，因为组件是复用的，需要做到作用域隔离。")])]),t._v(" "),s("h3",{attrs:{id:"渲染顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#渲染顺序"}},[t._v("#")]),t._v(" 渲染顺序")]),t._v(" "),s("p",[t._v("组件渲染顺序是由内而外的，子组件比父组件先渲染。")]),t._v(" "),s("p",[t._v("子组件的Mounted事件触发时，父组件的Mounted还未开始。所以监听要放在父组件的Created事件里。")]),t._v(" "),s("h2",{attrs:{id:"组件注册"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组件注册"}},[t._v("#")]),t._v(" 组件注册")]),t._v(" "),s("ol",[s("li",[t._v("全局注册")]),t._v(" "),s("li",[t._v("局部注册")]),t._v(" "),s("li",[t._v("基础组件的全局自动化注册\nnodejs 的 require.context() 功能。(svg icons等多处自动化批量处理都会用到这个方法）")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Vue "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" upperFirst "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lodash/upperFirst'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" camelCase "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lodash/camelCase'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" requireComponent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" require"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("context")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 其组件目录的相对路径")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否查询其子目录")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匹配基础组件文件名的正则表达式")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("z"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\\w\\"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vue$"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nrequireComponent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fileName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" componentConfig "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("requireComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fileName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" componentName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("upperFirst")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("camelCase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fileName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\.\\w+$/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果这个组件是 export default 导出的，则优先使用.default")]),t._v("\n    Vue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("componentName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" componentConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" componentConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"prop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prop"}},[t._v("#")]),t._v(" Prop")]),t._v(" "),s("blockquote",[s("p",[t._v("Prop 是你可以在组件上注册的一些自定义 attribute 。")])]),t._v(" "),s("h3",{attrs:{id:"传递"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#传递"}},[t._v("#")]),t._v(" 传递")]),t._v(" "),s("ol",[s("li",[t._v("静态prop")]),t._v(" "),s("li",[t._v("动态Prop通过v-bind来绑定动态值")])]),t._v(" "),s("p",[s("strong",[t._v("注：")]),t._v(" 传入一个对象的所有属性,使用不带参数的 v-bind 实现: "),s("code",[t._v("v-bind=prop-name")])]),t._v(" "),s("h3",{attrs:{id:"校验"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#校验"}},[t._v("#")]),t._v(" 校验")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("type: 类型检查")]),t._v(" "),s("ul",[s("li",[t._v("null 和 undefined 会通过所有类型检查")]),t._v(" "),s("li",[t._v("类型可以为原生构造函数：String、Date、Symbol...")]),t._v(" "),s("li",[t._v("多个类型可以为数组：[String, Number]")]),t._v(" "),s("li",[t._v("类型也可以是自定义构造函数,通过 instanceof 判断")])])]),t._v(" "),s("li",[s("p",[t._v("required: 必填检查")])]),t._v(" "),s("li",[s("p",[t._v("default: 默认值必填")]),t._v(" "),s("ul",[s("li",[t._v("对象或数组默认值必须从一个工厂函数获取")])])]),t._v(" "),s("li",[s("p",[t._v("validator: 自定义验证函数")])])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("validator")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个值必须匹配下列字符串中的一个")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'success'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'warning'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'danger'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"单向数据流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单向数据流"}},[t._v("#")]),t._v(" 单向数据流")]),t._v(" "),s("p",[t._v("所有的prop是从父到子的 "),s("strong",[t._v("单向下行绑定")]),t._v(" 。不应该在子组件内部修改prop。")]),t._v(" "),s("ol",[s("li",[t._v("这个 prop 用来传递一个初始值；这个子组件接下来希望将其作为一个本地的 prop 数据来使用。\n"),s("blockquote",[s("p",[t._v("定义一个本地的 data 属性并将这个 prop 用作其初始值")])])]),t._v(" "),s("li",[t._v("这个 prop 以一种原始的值传入且需要进行转换。\n"),s("blockquote",[s("p",[t._v("定义一个这个prop的计算属性")])])])]),t._v(" "),s("p",[s("strong",[t._v("注：")]),t._v(" 对象和数组是通过引用传入的，组件中改变这个对象或数组本身将会影响到父组件的状态。")]),t._v(" "),s("h3",{attrs:{id:"prop的双向绑定：-sync修饰符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#prop的双向绑定：-sync修饰符"}},[t._v("#")]),t._v(" Prop的双向绑定："),s("code",[t._v(".sync")]),t._v("修饰符")]),t._v(" "),s("p",[t._v("真正的双向绑定会带来维护上的问题。"),s("code",[t._v(".sync")]),t._v("修饰符是 Prop 与"),s("code",[t._v("update:prop-name")]),t._v("事件的语法糖:")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("custom-component")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-bind:")]),t._v("title")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("doc.title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-on:")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("update:")]),t._v("title")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("doc.title = $event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("custom-component")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n// 简写\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("custom-component")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-bind:")]),t._v("title.sync")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("doc.title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("custom-component")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[s("strong",[t._v("注：")]),t._v(" 注意带有 .sync 修饰符的 v-bind 不能和表达式一起使用 (例如 "),s("code",[t._v("v-bind:title.sync=”doc.title + ‘!’”")]),t._v("是无效的)。")]),t._v(" "),s("p",[t._v("对象的多个属性的双向绑定：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("custom-component")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-bind.sync")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("doc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("custom-component")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[s("strong",[t._v("注：")]),t._v(" 不能将 v-bind.sync 用在一个字面量的对象上，必须是对象变量。")]),t._v(" "),s("h4",{attrs:{id:"非-props-的-attribute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#非-props-的-attribute"}},[t._v("#")]),t._v(" 非 props 的 attribute")]),t._v(" "),s("p",[t._v("组件可以接受任意的 attribute，而这些 attribute 会被添加到这个组件的根元素上。")]),t._v(" "),s("h5",{attrs:{id:"_1-替换-合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-替换-合并"}},[t._v("#")]),t._v(" 1. 替换/合并")]),t._v(" "),s("ol",[s("li",[t._v("大多数属性，外部的属性会替换组件属性值。")]),t._v(" "),s("li",[t._v("class和style会智能合并。")])]),t._v(" "),s("h5",{attrs:{id:"_2-inheritattrs-false"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-inheritattrs-false"}},[t._v("#")]),t._v(" 2. inheritAttrs: false")]),t._v(" "),s("p",[t._v("不希望 attribute 被默认添加到根元素上。可是设置该属性为false。")]),t._v(" "),s("ul",[s("li",[t._v("该属性的设置不会影响 class 和 style。也就是说 class 和 style 永远都会默认在根元素上。")]),t._v(" "),s("li",[t._v("希望自己手动设置的其它属性时候，使用"),s("code",[t._v("$attrs")]),t._v("可以获取到所有的attribute。")])]),t._v(" "),s("h2",{attrs:{id:"自定义事件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义事件"}},[t._v("#")]),t._v(" 自定义事件")]),t._v(" "),s("h3",{attrs:{id:"命名规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命名规范"}},[t._v("#")]),t._v(" 命名规范")]),t._v(" "),s("p",[t._v("由于 "),s("code",[t._v("v-on")]),t._v(" 事件监听器在DOM模版中会被自动转为全小写（html大小写不明感），但事件名必须完全匹配。所以始终使用 kebab-case 的命名规范。")]),t._v(" "),s("h3",{attrs:{id:"v-model"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v-model"}},[t._v("#")]),t._v(" v-model")]),t._v(" "),s("p",[t._v("是 prop 名为 value 和事件名为 input 的语法糖：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@input")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("handleInput"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("component")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("model为了避免原生组件 value 用于不同目的的冲突，可以手动指定 prop 和 事件名。")]),t._v(" "),s("p",[s("strong",[t._v("注：")]),t._v(" prop 必须在 props 中申明。")]),t._v(" "),s("h3",{attrs:{id:"监听原生事件：-native-修饰符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#监听原生事件：-native-修饰符"}},[t._v("#")]),t._v(" 监听原生事件："),s("code",[t._v(".native")]),t._v(" 修饰符")]),t._v(" "),s("p",[s("strong",[t._v("注：")]),t._v(" 当你监听类似 input 这种特定元素的原生事件 focus 时，会默默失败，因为组件根元素实际可能是个 label 元素。")]),t._v(" "),s("p",[s("strong",[t._v("解决方案：")]),t._v(" "),s("code",[t._v("$listeners")]),t._v("属性，包含了所有作用在这个组件上的事件监听器。配合 "),s("code",[t._v('v-on="$listeners"')]),t._v("将所有的事件监听器指向这个组件的某个特定的子元素")]),t._v(" "),s("h3",{attrs:{id:"程序化的事件侦听"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#程序化的事件侦听"}},[t._v("#")]),t._v(" 程序化的事件侦听")]),t._v(" "),s("p",[t._v("场景： 事件在代码里注册，但注销却在beforeDestory的生命周期里，业务逻辑是分散的。而程序化的事件侦听可以将业务逻辑写在一起。便于我们理解和清理。")]),t._v(" "),s("h4",{attrs:{id:"on-event-callback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#on-event-callback"}},[t._v("#")]),t._v(" $on(event, callback)")]),t._v(" "),s("p",[t._v("监听当前实例上的自定义事件。事件可以是由 "),s("code",[t._v("vm.$event")]),t._v(" 触发的事件。")]),t._v(" "),s("h4",{attrs:{id:"once-event-callback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#once-event-callback"}},[t._v("#")]),t._v(" $once(event, callback)")]),t._v(" "),s("p",[t._v("监听一个自定义事件，但只能触发一次。一旦触发，监听就会被移除。")]),t._v(" "),s("h4",{attrs:{id:"off-event-callback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#off-event-callback"}},[t._v("#")]),t._v(" $off([event, callback])")]),t._v(" "),s("p",[t._v("移除自定义事件监听器")]),t._v(" "),s("ul",[s("li",[t._v("$off() 没有提供参数，则移除所有监听器")]),t._v(" "),s("li",[t._v("$off(event_name) 只提供事件，则移除该事件的所有的监听器")]),t._v(" "),s("li",[t._v("$off(event_name, callback_name) 如果提供了事件和回调，则只移除这个回调的监听器")])]),t._v(" "),s("h4",{attrs:{id:"emit-eventname-args"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#emit-eventname-args"}},[t._v("#")]),t._v(" $emit(eventName, [...args])")]),t._v(" "),s("p",[t._v("程序化触发事件。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$once")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hook:beforeDestory'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("destory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"透明组件input"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#透明组件input"}},[t._v("#")]),t._v(" 透明组件Input")]),t._v(" "),s("ol",[s("li",[t._v("input输入框的change 和input事件有何区别？")])]),t._v(" "),s("blockquote",[s("p",[t._v("input 是输入中不断触发。change 只有在 blur 后触发")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("composition 事件")])]),t._v(" "),s("blockquote",[s("p",[t._v("中文输入过程中，会有拼写，如果不想拼写时触发更新，可以监听 compositionStart。")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Vue "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n\nVue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'base-input'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    inheritAttrs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    props"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'label'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    computed"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("inputListeners")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" vm "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 父级添加的所有监听器")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$listeners"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这是自定义的监听器，会覆盖一些父级监听事件")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// v-model 的工作")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("input")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        vm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$emit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'input'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    template"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\n    <label>\n        {{label}}\n        <input v-bind="$attrs"  v-bind:value="value" v-on="inputListeners"></input>\n    </label>\n\n    ')]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);